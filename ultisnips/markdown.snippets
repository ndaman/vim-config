# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

extends html, tex

#comment
snippet -c "reveal.js special comment"
<!-- .element ${1} -->
endsnippet

#hide bullet
snippet hh "hide reveal.js bullet"
style="list-style-type:none"
endsnippet

#fragment class
snippet fr "reveal.js fragment class"
class="fragment"
endsnippet

#figure
snippet fig "github figure"
![${1}](${2})
endsnippet

#sigma
snippet sig "sigma"
σ
endsnippet

#epsilon
snippet eps "epsilon"
ε
endsnippet

#gamma
snippet gam
γ
endsnippet

#beta
snippet bet
β
endsnippet

#eta
snippet eta
η
endsnippet

#theta
snippet theta
θ
endsnippet

#lambda
snippet lam
λ
endsnippet

#nu
snippet nu
ν
endsnippet

#tau
snippet tau
τ
endsnippet

#omega
snippet ome
ω
endsnippet

#psi
snippet     psi
ψ
endsnippet

#phi
snippet     phi
φ
endsnippet

#xi
snippet     xi
χ
endsnippet

#pi
snippet     pi
π
endsnippet

#delta
snippet     del
δ
endsnippet

#Delta
snippet     Del
Δ 
endsnippet

#rho
snippet     rho
ρ
endsnippet

#alpha
snippet     alp
α
endsnippet

#mu
snippet     mu
μ
endsnippet
